// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator kysely {
  provider = "prisma-kysely"
  output   = "../src/lib/server"
  fileName = "schema.ts"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Anime {
  id            Int      @id
  title         String
  pictureMedium String?
  pictureLarge  String?
  startDate     String?
  endDate       String?
  nsfw          String?
  createdAt     DateTime
  updatedAt     DateTime
  mediaType     String
  status        String
  episodes      Int
  season        String?
  seasonYear    Int?
  source        String?
  genres        String
  isSequel      Boolean?

  AnimeRecommendation AnimeRecommendation[]

  @@index([isSequel])
}

model Manga {
  id            Int      @id
  title         String   @db.VarChar(511)
  pictureMedium String?
  pictureLarge  String?
  startDate     String?
  endDate       String?
  nsfw          String?
  createdAt     DateTime
  updatedAt     DateTime
  mediaType     String
  status        String
  volumes       Int?
  chapters      Int?
  source        String?
  genres        String

  MangaRecommendation MangaRecommendation[]
}

model User {
  id      Int     @id
  name    String  @unique
  picture String?

  Recommendation      AnimeRecommendation[]
  MangaRecommendation MangaRecommendation[]
}

model AnimeRecommendation {
  animeId   Int
  userId    Int
  createdAt DateTime @default(now())

  anime Anime @relation(fields: [animeId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@id([animeId, userId])
  @@index([animeId])
  @@index([userId])
}

model MangaRecommendation {
  mangaId   Int
  userId    Int
  createdAt DateTime @default(now())

  manga   Manga @relation(fields: [mangaId], references: [id])
  user    User  @relation(fields: [userId], references: [id])
  animeId Int?

  @@id([mangaId, userId])
  @@index([mangaId])
  @@index([userId])
}
